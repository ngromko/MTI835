#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

struct BurningPoint
{
    vec4 pos;
    vec4 basePos;
    uvec4 bob;
    uvec4 bobb;
    uvec4 bobb3;
};

struct Particle {
    vec4 pos;
    vec4 color;
    float alpha;
    float size;
    float rotation;
    uint type;
    // Attributes not used in shader
    vec4 vel;
};

layout(std140, binding = 0) buffer Bumbo
{
   Particle particles[ ];
};

// Binding 1 : Position storage buffer
layout(std140, binding = 1) buffer Burn
{
   BurningPoint bPoints[ ];
};

layout (local_size_x = 512) in;

layout (binding = 2) uniform UBO
{
        //float deltaT;
        vec4 delta;
        vec4 click;
        int pCount;
        int bCount;
        int bCount3;
} ubo;

void main() 
{
    // Current SSBO index
    uint index = gl_GlobalInvocationID.x;
        // Don't try to write beyond bPoint count
    if (index >= ubo.bCount)
        return;
    vec3 dist = bPoints[index].pos.xyz-ubo.click.xyz;
    float d = dot(dist,dist);
    if(d<0.0121)
        bPoints[index].bobb3.w=10000;
}

