#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

struct BurningPoint
{
    vec4 pos;
    vec4 basePos;
    uvec4 bob;
    uvec4 bobb;
    uvec4 bobb3;
};

struct UBO
{
    mat4 model;
};

// Binding 1 : Position storage buffer
layout(std140, binding = 1) buffer Burn
{
   BurningPoint bPoints[ ];
};

layout (local_size_x = 512) in;

layout (binding = 0) buffer UBOT
{
    UBO ubos[];
};

void main() 
{
    // Current SSBO index
    uint index = gl_GlobalInvocationID.x;
        // Don't try to write beyond bPoint count
    if (index >= bPoints.length())
        return;
    uint uboIndex = bPoints[index].bobb3.z>>16;
    bPoints[index].pos =  ubos[uboIndex].model*bPoints[index].basePos;
}

